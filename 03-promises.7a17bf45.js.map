{"mappings":"qhBAAA,IAAAA,EAAAC,EAAA,SAEAC,EAAAF,GAASG,OAAOC,KAAK,CACrBC,MAAO,QACLC,SAAU,aACZC,SAAU,QACVC,kBAAmB,OACnBC,SAAU,OACVC,QAAS,CACLC,kBAAmB,yBACnBC,qBAAsB,mBAE1BC,QAAS,CACLC,WAAY,UACZH,kBAAmB,yBACnBC,qBAAsB,qBA4BxB,SAASG,EAAcT,EAAUU,GAC/B,MAAMC,EAAgBC,KAAKC,SAAW,GAC1C,OAAO,IAAIC,SAAQ,CAACC,EAASC,KAC3BC,YAAW,KACLN,EACFI,EAAQ,uBAAqBf,QAAiBU,OAG5CM,EAAK,sBAAoBhB,QAAeU,MAAU,GAErDA,EAAM,G,CAKT,SAASQ,EAAYC,GACnBvB,EAAAF,GAASG,OAAOU,QAAQY,E,CAG1B,SAASC,EAAUC,GACjBzB,EAAAF,GAASG,OAAOO,QAAQiB,E,EA5CZ,CACdC,KAAMC,SAASC,cAAc,SAC7BC,eAAgBF,SAASC,cAAc,kBACvCE,cAAeH,SAASC,cAAc,iBACtCG,WAAYJ,SAASC,cAAc,mBACnCI,IAAKL,SAASC,cAAc,qBAGtBF,KAAKO,iBAAiB,UAE9B,SAAsBC,GACpBC,QAAQC,IAAIF,GACZA,EAAMG,iBACN,MAAMC,EAAaC,OAAOL,EAAMM,OAAO1B,MAAM2B,OACvCC,EAAOH,OAAOL,EAAMM,OAAOE,KAAKD,OAChCE,EAASJ,OAAOL,EAAMM,OAAOG,OAAOF,OAC1C,IAAIG,EAAcN,EAClB,IAAK,IAAIO,EAAI,EAAGA,GAAKF,EAAQE,IAC3BhC,EAAcgC,EAAGD,GACdE,KAAKxB,GACLyB,MAAMvB,GACboB,GAAeF,C","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\n\nNotiflix.Notify.init({\nwidth: '300px',\n  position: 'center-top',\ndistance: '100px',\ncssAnimationStyle: 'zoom',\nfontSize: '15px',\nfailure: {\n    notiflixIconColor: 'rgba(230,230,230,0.95)',\n    fontAwesomeIconColor: 'rgba(0,0,0,0.2)',\n    },\nsuccess: {\n    background: '#3DA35D',\n    notiflixIconColor: 'rgba(230,230,230,0.95)',\n    fontAwesomeIconColor: 'rgba(0,0,0,0.2)',\n}\n});\n\nconst formObj = {\n  form: document.querySelector('.form'),\n  firstDelayForm: document.querySelector('[name=\"delay\"]'),\n  stepDelayForm: document.querySelector('[name=\"step\"]'),\n  amountForm: document.querySelector('[name=\"amount\"]'),\n  btn: document.querySelector('[type=\"submit\"]'),\n};\n\nformObj.form.addEventListener('submit', onFormSubmit)\n\nfunction onFormSubmit(event) {\n  console.log(event);\n  event.preventDefault();\n  const firstDelay = Number(event.target.delay.value);\n  const step = Number(event.target.step.value);\n  const amount = Number(event.target.amount.value);\n  let runPromises = firstDelay;\n  for (let i = 1; i <= amount; i++) {\n    createPromise(i, runPromises)\n      .then(successFunc)\n      .catch(errorFunc)\nrunPromises += step\n  }};\n\n  function createPromise(position, delay) {\n    const shouldResolve = Math.random() > 0.3;\nreturn new Promise((resolve, reject) => {\n  setTimeout(() => {\n    if (shouldResolve) {\n      resolve(`✅ Fulfilled promise ${position} in ${delay}ms`)\n    }\n    else {\n      reject(`❌ Rejected promise ${position} in ${delay}ms`)\n    }\n  }, delay)\n  \n})\n  };\n\n  function successFunc(result) {\n    Notiflix.Notify.success(result);\n  }\n\n  function errorFunc(error) {\n    Notiflix.Notify.failure(error);\n  }"],"names":["$7Y9D8","parcelRequire","$parcel$interopDefault","Notify","init","width","position","distance","cssAnimationStyle","fontSize","failure","notiflixIconColor","fontAwesomeIconColor","success","background","$47d4ff9957288465$var$createPromise","delay","shouldResolve","Math","random","Promise","resolve","reject","setTimeout","$47d4ff9957288465$var$successFunc","result","$47d4ff9957288465$var$errorFunc","error","form","document","querySelector","firstDelayForm","stepDelayForm","amountForm","btn","addEventListener","event","console","log","preventDefault","firstDelay","Number","target","value","step","amount","runPromises","i","then","catch"],"version":3,"file":"03-promises.7a17bf45.js.map"}