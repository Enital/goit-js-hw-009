{"mappings":"iiBAAA,IAAAA,EAAAC,EAAA,SA2CE,SAASC,EAAcC,EAAUC,GAC/B,IAAMC,EAAgBC,KAAKC,SAAW,GAC1C,OAAO,IAAIC,SAAQ,SAACC,EAASC,GAC3BC,YAAW,WACLN,EACFI,EAAQ,uBAAwCG,OAAfT,EAAS,QAAYS,OAANR,EAAM,OAGpDM,EAAK,sBAAqCE,OAAfT,EAAS,QAAYS,OAANR,EAAM,M,GAEnDA,E,IAKH,SAASS,EAAYC,GACnBC,EAAAf,GAASgB,OAAOC,QAAQH,E,CAG1B,SAASI,EAAUC,GACjBJ,EAAAf,GAASgB,OAAOI,QAAQD,E,CA7D5BJ,EAAAf,GAASgB,OAAOK,KAAK,CACrBC,MAAO,QACPnB,SAAU,aACVoB,SAAU,QAEVC,SAAU,OACVJ,QAAS,CACLK,kBAAmB,yBACnBC,qBAAsB,mBAE1BT,QAAS,CACLU,WAAY,UACZF,kBAAmB,yBACnBC,qBAAsB,qBAIV,CACdE,KAAMC,SAASC,cAAc,SAC7BC,eAAgBF,SAASC,cAAc,kBACvCE,cAAeH,SAASC,cAAc,iBACtCG,WAAYJ,SAASC,cAAc,mBACnCI,IAAKL,SAASC,cAAc,oBAGtBF,KAAKO,iBAAiB,UAE9B,SAAsBC,GAEpBA,EAAMC,iBAKN,IAJA,IAAMC,EAAaC,OAAOH,EAAMI,OAAOpC,MAAMqC,OACvCC,EAAOH,OAAOH,EAAMI,OAAOE,KAAKD,OAChCE,EAASJ,OAAOH,EAAMI,OAAOG,OAAOF,OACtCG,EAAcN,EACTO,EAAI,EAAGA,GAAKF,EAAQE,IAC3B3C,EAAc2C,EAAGD,GACdE,KAAKjC,GACLkC,MAAM7B,GACb0B,GAAeF,C","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\n\nNotiflix.Notify.init({\nwidth: '300px',\nposition: 'center-top',\ndistance: '120px',\n// cssAnimationStyle: 'zoom',\nfontSize: '15px',\nfailure: {\n    notiflixIconColor: 'rgba(230,230,230,0.95)',\n    fontAwesomeIconColor: 'rgba(0,0,0,0.2)',\n    },\nsuccess: {\n    background: '#3DA35D',\n    notiflixIconColor: 'rgba(230,230,230,0.95)',\n    fontAwesomeIconColor: 'rgba(0,0,0,0.2)',\n}\n});\n\nconst formObj = {\n  form: document.querySelector('.form'),\n  firstDelayForm: document.querySelector('[name=\"delay\"]'),\n  stepDelayForm: document.querySelector('[name=\"step\"]'),\n  amountForm: document.querySelector('[name=\"amount\"]'),\n  btn: document.querySelector('[type=\"submit\"]'),\n};\n\nformObj.form.addEventListener('submit', onFormSubmit)\n\nfunction onFormSubmit(event) {\n  // console.log(event);\n  event.preventDefault();\n  const firstDelay = Number(event.target.delay.value);\n  const step = Number(event.target.step.value);\n  const amount = Number(event.target.amount.value);\n  let runPromises = firstDelay;\n  for (let i = 1; i <= amount; i++) {\n    createPromise(i, runPromises)\n      .then(successFunc)\n      .catch(errorFunc)\nrunPromises += step\n  }};\n\n  function createPromise(position, delay) {\n    const shouldResolve = Math.random() > 0.3;\nreturn new Promise((resolve, reject) => {\n  setTimeout(() => {\n    if (shouldResolve) {\n      resolve(`✅ Fulfilled promise ${position} in ${delay}ms`)\n    }\n    else {\n      reject(`❌ Rejected promise ${position} in ${delay}ms`)\n    }\n  }, delay)\n  \n})\n  };\n\n  function successFunc(result) {\n    Notiflix.Notify.success(result);\n  }\n\n  function errorFunc(error) {\n    Notiflix.Notify.failure(error);\n  }"],"names":["$6JpON","parcelRequire","$ce04d3a99e08e73b$var$createPromise","position","delay","shouldResolve","Math","random","Promise","resolve","reject","setTimeout","concat","$ce04d3a99e08e73b$var$successFunc","result","$parcel$interopDefault","Notify","success","$ce04d3a99e08e73b$var$errorFunc","error","failure","init","width","distance","fontSize","notiflixIconColor","fontAwesomeIconColor","background","form","document","querySelector","firstDelayForm","stepDelayForm","amountForm","btn","addEventListener","event","preventDefault","firstDelay","Number","target","value","step","amount","runPromises","i","then","catch"],"version":3,"file":"03-promises.09087aad.js.map"}